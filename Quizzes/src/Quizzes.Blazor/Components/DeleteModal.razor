


<Button Color="Color.Danger" Clicked="@ShowModal" Class="extra-small-button">
    <Icon Name="IconName.Delete" /> @Message
</Button>

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader Flex="Flex.JustifyContent.Center">
            Are you sure you want to @Message?
        </ModalHeader>

        <ModalBody>
            <p>Once you delete, you can't recover it.</p>
        </ModalBody>

        <ModalFooter Flex="Flex.JustifyContent.Center">
            <Button Color="Color.Danger" Clicked="@ConfirmDelete" Size="Size.ExtraLarge">
                <Icon Name="IconName.Delete" /> @Message
            </Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [Parameter]
    public string? Message { get; set; }
    [Parameter]
    public EventCallback Clicked { get; set; }

    private Modal? modalRef;

    private async Task ConfirmDelete()
    {
        HideModal();
        await Clicked.InvokeAsync();
    }

    private void ShowModal()
    {
        if (modalRef != null) modalRef.Show();
    }
    private void HideModal()
    {
        if (modalRef != null) modalRef.Hide();
    }

}

<style>
    .extra-small-button {
        font-size: 0.7rem;
        padding: 3px 8px;
    }
</style>